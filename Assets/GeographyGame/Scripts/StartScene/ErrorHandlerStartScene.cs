using System;
using System.Collections.Generic;
using UnityEngine;

namespace WPM
{
    public class ErrorHandlerStartScene : MonoBehaviour, IErrorHandler
    {
        [SerializeField] private GameObject errorUIObject;
        public ErrorState ErrorState { get; set; } = ErrorState.no_error;
        //Error Data
        private Exception exception;
        private string errorMessage;
        //External Interfaces
        private IErrorUI errorUI;
        //Error Checking
        private bool errorUIInitialized = false;
        private InterfaceFactoryStartScene interfaceFactory;

        void Awake()
        {
            if (errorUIObject == null)
                EmergencyExit("Error UI Game Object Not Found");

            errorUI = errorUIObject.GetComponent(typeof(IErrorUI)) as IErrorUI;
            if (errorUI == null)
                EmergencyExit("Error UI Script Not Found");
            else
                errorUIInitialized = true;

            interfaceFactory = FindObjectOfType<InterfaceFactoryStartScene>();
            if (interfaceFactory == null)
                EmergencyExit("Interface Factory not found");
        }

        void Start()
        {
            if (ErrorState == ErrorState.no_error)
                errorUI.CloseUI();
        }

        /// <summary>
        ///  Report an error to the user using the game's error panel
        ///  The panel also reports the stacktrace from the location of the error
        /// </summary>
        /// <param name="message"></param> The error message for the user>
        /// <param name="state"<>/param> The state the error handler should be set to>
        /// <returns></returns> 
        public void ReportError(string message, ErrorState state)
        {
            if (!errorUIInitialized)
                Awake();
            ErrorState = state;
            if (errorUI != null)
            {
                errorUI.setErrorMessage(message);
                errorUI.setStackTrace(Environment.StackTrace);
                errorUI.OpenUI();
            }
            else
                EmergencyExit("Error UI Script Not Found");
        }

        /// <summary>
        ///  Report an exception to the user using the game's error panel.
        ///  Reports the error message generated by unity as well as the stacktrace
        /// </summary>
        /// <param name="ex"></param> The exception to report to the user>
        /// <param name="state"<>/param> The state the error handler should be set to>
        /// <returns></returns> 
        public void CatchException(Exception ex, ErrorState state)
        {
            if (!errorUIInitialized)
                Awake();

            ErrorState = state;
            string combinedStackTrace;
            if (errorUI != null)
            {
                if (ex == null)
                {
                    errorUI.setErrorMessage("Exception Missing");
                }
                else
                {
                    combinedStackTrace = ex.StackTrace;
                    var inner = ex.InnerException;
                    while (inner != null)
                    {
                        combinedStackTrace = combinedStackTrace + inner.StackTrace;
                        inner = inner.InnerException;
                    }
                    errorUI.setErrorMessage(ex.Message);
                    errorUI.setStackTrace(combinedStackTrace);
                }

                errorUI.OpenUI();
            }
            else
                EmergencyExit("Error UI Script Not Found");
        }

        /// <summary>
        ///  Execute the error responce determined by the error handler's error state
        /// </summary>
        public void ErrorResponse()
        {
            if (!errorUIInitialized)
                Awake();

            if (errorUI != null)
            {
                switch (ErrorState)
                {
                    case (ErrorState.close_window):
                        errorUI.CloseUI();
                        break;

                    case (ErrorState.close_application):
                        Application.Quit();
                        break;

                    default:
                        Application.Quit();
                        break;
                }
            }
            else
                EmergencyExit("Error UI Script Not Found");
        }

        public void EmergencyExit(string message)
        {
            Debug.Log(message);
            Application.Quit();
        }

    }
}

